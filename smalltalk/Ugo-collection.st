<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorksÂ® Personal Use Edition, 8.2 of July 15, 2016 on February 7, 2017 at 11:16:32 AM</time-stamp>


<component-created>
<name>Ugo-2017-01-31</name> <type>package</type>
</component-created><!-- Package Ugo-2017-01-31* -->


<component-created>
<name>Ugo-2017-01-31</name> <type>package</type>
</component-created>

<class>
<name>UgosSimpleCounter</name>
<environment>Smalltalk</environment>
<super>UI.ApplicationModel</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>counter </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category></category>
<attributes>
<package>Ugo-2017-01-31</package>
</attributes>
</class>

<class>
<name>QNode</name>
<environment>Smalltalk</environment>
<super>Core.Object</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>value next </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category></category>
<attributes>
<package>Ugo-2017-01-31</package>
</attributes>
</class>

<class>
<name>UgoCollection</name>
<environment>Smalltalk</environment>
<super>Core.Object</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>size </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category></category>
<attributes>
<package>Ugo-2017-01-31</package>
</attributes>
</class>

<class>
<name>Stack</name>
<environment>Smalltalk</environment>
<super>Core.Object</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>items </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category></category>
<attributes>
<package>Ugo-2017-01-31</package>
</attributes>
</class>

<class>
<name>Queue</name>
<environment>Smalltalk</environment>
<super>UgoCollection</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>first last </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category></category>
<attributes>
<package>Ugo-2017-01-31</package>
</attributes>
</class>

<methods>
<class-id>UgosSimpleCounter class</class-id> <category>interface specs</category>

<body package="Ugo-2017-01-31" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Ugo''s simple counter' 			#bounds: #(#{Graphics.Rectangle} 205 365 634 751 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 56 0 36 0 109 0 54 0 ) 					#name: #ActionButton1 					#model: #increment 					#label: 'UP' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 57 0 84 0 110 0 102 0 ) 					#name: #ActionButton2 					#model: #decrement 					#label: 'DOWN' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 188 0 42 0 288 0 61 0 ) 					#name: #InputField1 					#model: #counter 					#alignment: #right 					#isReadOnly: true 					#type: #number 					#formatString: '0' ) 				#(#{UI.SliderSpec} 					#layout: #(#{Graphics.LayoutFrame} 202 0 96 0 397 0 123 0 ) 					#name: #Slider1 					#model: #counter 					#orientation: #horizontal 					#start: 0 					#stop: 100 					#step: 1 ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 194 0 89 0 ) 					#name: #Label1 					#label: '0' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 378 0 95 0 ) 					#name: #Label2 					#label: '100' ) ) ) )</body>
</methods>


<methods>
<class-id>UgosSimpleCounter</class-id> <category>aspects</category>

<body package="Ugo-2017-01-31" selector="counter">counter	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^counter isNil		ifTrue:			[counter := 0 asValue]		ifFalse:			[counter]</body>
</methods>

<methods>
<class-id>UgosSimpleCounter</class-id> <category>actions</category>

<body package="Ugo-2017-01-31" selector="decrement">decrement	"This stub method was generated by UIDefiner"	counter value: (counter value) - 1.	^self</body>

<body package="Ugo-2017-01-31" selector="increment">increment	"This stub method was generated by UIDefiner"	counter value: (counter value) + 1.	^self</body>
</methods>


<methods>
<class-id>UgoCollection class</class-id> <category>instance creation</category>

<body package="Ugo-2017-01-31" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body>
</methods>


<methods>
<class-id>UgoCollection</class-id> <category>accessing</category>

<body package="Ugo-2017-01-31" selector="isEmpty">isEmpty	"comment stating purpose of message"	^size == 0.</body>

<body package="Ugo-2017-01-31" selector="size">size	^size</body>

<body package="Ugo-2017-01-31" selector="size:">size: anObject	size := anObject</body>
</methods>

<methods>
<class-id>UgoCollection</class-id> <category>iterators</category>

<body package="Ugo-2017-01-31" selector="iterate:">iterate: aBlock	"comment stating purpose of message"	self isEmpty 	ifTrue: [		^nil.].	1 to: size do: [ :i |		aBlock value: (self get: i). ].	^self.</body>
</methods>

<methods>
<class-id>UgoCollection</class-id> <category>initialize-release</category>

<body package="Ugo-2017-01-31" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	size :=0.	" *** And replace this comment with additional initialization code *** "	^self</body>
</methods>


<methods>
<class-id>QNode class</class-id> <category>instance creation</category>

<body package="Ugo-2017-01-31" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body>
</methods>


<methods>
<class-id>QNode</class-id> <category>accessing</category>

<body package="Ugo-2017-01-31" selector="value">value	^value</body>

<body package="Ugo-2017-01-31" selector="next">next	^next</body>

<body package="Ugo-2017-01-31" selector="next:">next: anObject	next := anObject</body>

<body package="Ugo-2017-01-31" selector="value:">value: anObject	value := anObject</body>
</methods>

<methods>
<class-id>QNode</class-id> <category>printing</category>

<body package="Ugo-2017-01-31" selector="printOn:">printOn: aStream	"comment stating purpose of message"    | cursor |	aStream nextPutAll: 'QNode('.	aStream nextPutAll: value printString.	cursor :=  self.	[cursor next notNil] whileTrue:		[cursor := cursor next. 			aStream nextPutAll: ' '.			aStream nextPutAll: (cursor value printString). ].	aStream nextPutAll: ')'.	^self.</body>
</methods>

<methods>
<class-id>QNode</class-id> <category>operations</category>

<body package="Ugo-2017-01-31" selector="insert:">insert: x	"comment stating purpose of message"	| temp |	temp := QNode new.	temp value: x.	temp next: next.	next := temp.	^self.</body>
</methods>

<methods>
<class-id>QNode</class-id> <category>initialize-release</category>

<body package="Ugo-2017-01-31" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	value := nil.	next := nil.	" *** And replace this comment with additional initialization code *** "	^self</body>
</methods>


<methods>
<class-id>Stack class</class-id> <category>instance creation</category>

<body package="Ugo-2017-01-31" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body>
</methods>


<methods>
<class-id>Stack</class-id> <category>accessing</category>

<body package="Ugo-2017-01-31" selector="items:">items: anObject	items := anObject</body>

<body package="Ugo-2017-01-31" selector="items">items	^items</body>
</methods>

<methods>
<class-id>Stack</class-id> <category>stack-operations</category>

<body package="Ugo-2017-01-31" selector="push:">push: x	"comment stating purpose of message"	items addFirst: x.	^self.</body>

<body package="Ugo-2017-01-31" selector="contains:">contains: x	"comment stating purpose of message"	(items isEmpty) ifTrue: [^false].	items do: [:y | (y = x) ifTrue: [^true]].	^false.</body>

<body package="Ugo-2017-01-31" selector="pop">pop	"comment stating purpose of message"	(items isEmpty)		ifTrue: [self error: 'Don''t pop an empty stack, please!'.]         ifFalse: [^items removeFirst.]</body>

<body package="Ugo-2017-01-31" selector="top">top	"comment stating purpose of message"	(items isEmpty)		ifTrue: [self error: 'Don''t pop an empty stack, please!'.]         ifFalse: [^items first.]</body>
</methods>

<methods>
<class-id>Stack</class-id> <category>initialize-release</category>

<body package="Ugo-2017-01-31" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	items := OrderedCollection new.	^self</body>
</methods>


<methods>
<class-id>Queue class</class-id> <category>instance creation</category>

<body package="Ugo-2017-01-31" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body>
</methods>


<methods>
<class-id>Queue</class-id> <category>queue-operations</category>

<body package="Ugo-2017-01-31" selector="enqueue:">enqueue: x	"comment stating purpose of message"	first isNil 	ifTrue: [		first := last := QNode new value: x. ]	ifFalse: [		last insert: x.		last := last next. ].	size := size + 1.	^self.</body>

<body package="Ugo-2017-01-31" selector="dequeue">dequeue	"comment stating purpose of message"	| retValue |	first isNil 	ifTrue: [		^nil. ]	ifFalse: [		retValue := first value.		first := first next.		first isNil ifTrue: [last := nil.].		size := size - 1. ].	^retValue.</body>
</methods>

<methods>
<class-id>Queue</class-id> <category>accessing</category>

<body package="Ugo-2017-01-31" selector="first">first	^first</body>

<body package="Ugo-2017-01-31" selector="last">last	^last</body>

<body package="Ugo-2017-01-31" selector="last:">last: anObject	last := anObject</body>

<body package="Ugo-2017-01-31" selector="first:">first: anObject	first := anObject</body>

<body package="Ugo-2017-01-31" selector="get:">get: i	"comment stating purpose of message"    | cursor |	i &gt; size ifTrue: [		^self error: 'out of bounds error: ', i printString].	cursor := first.	1 to: i - 1 do: [:j | cursor := cursor next.].	^cursor value.</body>
</methods>

<methods>
<class-id>Queue</class-id> <category>initialize-release</category>

<body package="Ugo-2017-01-31" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	first := nil.	last := nil.	" *** And replace this comment with additional initialization code *** "	^self</body>
</methods>



</st-source>
